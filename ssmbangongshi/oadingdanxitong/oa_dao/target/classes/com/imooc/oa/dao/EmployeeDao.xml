<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.4//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--命名空间-->
<mapper namespace="com.imooc.oa.dao.EmployeeDao">

    <resultMap id="employee" type="Employee">
        <!--主键用id来配置 property属性名 column字段名-->
        <id property="sn" column="sn" javaType="String"/>
        <!--非主键用result来配置-->
        <result property="password" column="password" javaType="String"/>
        <result property="name" column="name" javaType="String"/>
        <result property="departmentSn" column="department_sn" javaType="String"/>
        <result property="post" column="post" javaType="String"/>
        <!--查询的时候顺便把他关联的部门查询出来-->
        <!--column关联的字段，department-->
        <association property="department" column="department_sn" javaType="Department">
            <!--column字段名不能与上面的一样-->
            <id property="sn" column="dsn" javaType="String"/>
            <result property="name" column="dname" javaType="String"/>
        </association>
    </resultMap>

    <insert id="insert" parameterType="Employee">
        insert into employee values(#{sn},#{password},#{name},#{departmentSn},#{post})
    </insert>

    <!--字段名，属性名-->
    <update id="update" parameterType="Employee">
        update employee set password=#{password},name=#{name},department_sn=#{departmentSn},post=#{post} where sn=#{sn}
    </update>

    <delete id="delete" parameterType="String">
        delete from employee where sn=#{sn}
    </delete>

    <select id="select" parameterType="String" resultMap="employee">
        select e.*,d.sn dsn,d.name dname from employee e left join department d on d.sn=e.department_sn
        where e.sn=#{sn}
    </select>

    <select id="selectAll" resultMap="employee">
        select e.*,d.sn dsn,d.name dname from employee e left join department d on d.sn=e.department_sn
    </select>

</mapper>